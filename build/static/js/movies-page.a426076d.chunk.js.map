{"version":3,"sources":["services/movieApi.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/Form/Form.js","components/MoviesList/MoviesList.js","views/MoviesPage.js"],"names":["axios","defaults","baseURL","API_KEY","fetchTrending","get","then","response","data","results","fetchMovie","query","fetchMovieById","movieId","fetchCast","cast","fetchReview","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Form","state","name","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","this","type","id","nameInputId","onChange","Component","MoviesList","movies","a","movieApi","searchMovie","responce","prevProps","prevState","componentDidMount","map","movie","to","pathname","routes","moviesPage","from","location","title","defaultProps","withRouter","MoviesPage","formSubmitHandler"],"mappings":"yIAAA,qBAEAA,IAAMC,SAASC,QAAU,+BACzB,IAAMC,EAAU,mCAyCD,KAAEC,cAvCK,WACpB,OAAOJ,IACJK,IADI,sCAE4BF,IAEhCG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAkCJC,WA/Bb,SAACC,GAClB,OAAOX,IACJK,IADI,gCAEsBF,EAFtB,iCAEsDQ,EAFtD,gCAIJL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SA0BaI,eAvBrB,SAACC,GACtB,OAAOb,IACJK,IADI,iBAEOQ,EAFP,oBAE0BV,EAF1B,oBAIJG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB6BM,UAf1C,SAACD,GACjB,OAAOb,IACJK,IADI,iBAEOQ,EAFP,4BAEkCV,EAFlC,oBAIJG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKO,SAUmCC,YARnD,SAACH,GACnB,OAAOb,IACJK,IADI,iBAEOQ,EAFP,4BAEkCV,EAFlC,2BAIJG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,c,gHCzCrB,SAASQ,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,E,UCqCMQ,E,4MA5CbC,MAAQ,CACNC,KAAM,I,EAGRC,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,cAAlBH,EADU,EACVA,KAAMR,EADI,EACJA,MACd,EAAKY,SAAL,KAAiBJ,EAAOR,K,EAG1Ba,aAAe,SAAAH,GACbA,EAAEI,iBACF,EAAKC,MAAMC,SAAS,EAAKT,OACzB,EAAKU,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEJ,KAAM,M,4CAGxB,WACE,OACE,oCACE,0BAAMU,UAAU,OAAOF,SAAUG,KAAKN,cAClC,2BACEO,KAAK,OACLZ,KAAK,OACLR,MAAOmB,KAAKZ,MAAMC,KAClBa,GAAIF,KAAKG,YACTC,SAAUJ,KAAKV,eAGnB,4BAAQW,KAAK,SAASF,UAAU,eAAhC,gB,GAhCSM,a,8DCGbC,E,4MACFlB,MAAQ,CACJmB,OAAQ,I,8FAGZ,4BAAAC,EAAA,sEAC2BC,IAAStC,WAAW6B,KAAKJ,MAAMc,aAD1D,OACUC,EADV,OAEIX,KAAKP,SAAS,CAAEc,OAAQI,EAASzC,UAFrC,gD,sFAKA,SAAmB0C,EAAWC,GACtBD,EAAUF,cAAgBV,KAAKJ,MAAMc,aACrCV,KAAKc,sB,oBAIb,WAAU,IAAD,OACGP,EAAWP,KAAKZ,MAAhBmB,OACR,OACA,4BACKA,EAAOQ,KAAI,SAAAC,GAAK,OACb,wBAAIpC,IAAKoC,EAAMd,GAAIH,UAAU,QACzB,kBAAC,IAAD,CAAMkB,GAAI,CACNC,SAAS,GAAD,OAAKC,IAAOC,WAAZ,YAA0BJ,EAAMd,IACxCd,MAAO,CACHiC,KAAM,EAAKzB,MAAM0B,YAGxBN,EAAMO,gB,GA5BFlB,aAoCzBC,EAAWkB,aAAe,CACxBd,YAAa,IAOAe,kBAAWnB,GC/CpBoB,E,4MACFtC,MAAQ,CACJsB,YAAa,I,EAGjBiB,kBAAoB,SAAA1D,GAChB,EAAKwB,SAAS,CAAEiB,YAAazC,EAAKoB,Q,4CAGtC,WAAU,IACEqB,EAAgBV,KAAKZ,MAArBsB,YACR,OACI,oCACI,kBAAC,EAAD,CAAMb,SAAUG,KAAK2B,oBACpBjB,GAAe,kBAAC,EAAD,CAAYA,YAAaA,S,GAdhCL,aAoBVqB","file":"static/js/movies-page.a426076d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = 'f4fc9e0b9d39be2e572ef6e62fdd383f';\r\n\r\nconst fetchTrending = () => {\r\n  return axios\r\n    .get(\r\n      `/trending/movie/day?api_key=${API_KEY}`,\r\n    )\r\n    .then(response => response.data.results);\r\n};\r\n\r\nconst fetchMovie = (query) => {\r\n  return axios\r\n    .get(\r\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\r\n    )\r\n    .then(response => response.data);\r\n};\r\n\r\nconst fetchMovieById = (movieId) => {\r\n  return axios\r\n    .get(\r\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\r\n    )\r\n    .then(response => response.data);\r\n};\r\n\r\nconst fetchCast = (movieId) => {\r\n  return axios\r\n    .get(\r\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\r\n    )\r\n    .then(response => response.data.cast);\r\n};\r\nconst fetchReview = (movieId) => {\r\n  return axios\r\n    .get(\r\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\r\n    )\r\n    .then(response => response.data.results);\r\n};\r\n\r\nexport default { fetchTrending, fetchMovie, fetchMovieById, fetchCast, fetchReview };\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { Component } from 'react';\nimport './Form.scss';\nimport PropTypes from 'prop-types';\n\nclass Form extends Component {\n  state = {\n    name: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '' });\n  };\n\n  render() {\n    return (\n      <>\n        <form className='Form' onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              id={this.nameInputId}\n              onChange={this.handleChange}\n            />\n\n          <button type=\"submit\" className='Form_button'>\n            Search\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport routes from '../../routes';\r\nimport '../../styles/base.scss';\r\nimport movieApi from '../../services/movieApi';\r\n\r\nclass MoviesList extends Component {\r\n    state = {\r\n        movies: [],\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const responce = await movieApi.fetchMovie(this.props.searchMovie);\r\n        this.setState({ movies: responce.results });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.searchMovie !== this.props.searchMovie) {\r\n            this.componentDidMount();\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const { movies } = this.state;\r\n        return (\r\n        <ul>\r\n            {movies.map(movie =>\r\n                <li key={movie.id} className='list'>\r\n                    <Link to={{\r\n                        pathname: `${routes.moviesPage}/${movie.id}`,\r\n                        state: {\r\n                            from: this.props.location,\r\n                        }\r\n                    }}>\r\n                    {movie.title}\r\n                    </Link>\r\n            </li> )}\r\n        </ul>\r\n    );\r\n    }\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  searchMovie: '',\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  searchMovie: PropTypes.string,\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n","import React, { Component } from 'react';\r\nimport Form from '../components/Form';\r\nimport MoviesList from '../components/MoviesList';\r\n\r\nclass MoviesPage extends Component {\r\n    state = {\r\n        searchMovie: '',\r\n    }\r\n    \r\n    formSubmitHandler = data => {\r\n        this.setState({ searchMovie: data.name });\r\n    };\r\n\r\n    render() {\r\n        const { searchMovie } = this.state;\r\n        return ( \r\n            <>\r\n                <Form onSubmit={this.formSubmitHandler} />\r\n                {searchMovie && <MoviesList searchMovie={searchMovie} />}\r\n            </>\r\n         );\r\n    }\r\n};\r\n \r\nexport default MoviesPage;\r\n"],"sourceRoot":""}