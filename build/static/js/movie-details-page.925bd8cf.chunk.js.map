{"version":3,"sources":["services/movieApi.js","views/MovieDetailsPage.js"],"names":["axios","defaults","baseURL","API_KEY","fetchTrending","get","then","response","data","results","fetchMovie","query","fetchMovieById","movieId","fetchCast","cast","fetchReview","Cast","lazy","Reviews","MovieDetailsPage","state","title","overview","genres","poster_path","release_date","vote_average","handleGoBack","props","location","history","from","push","routes","moviesPage","a","this","match","params","movieApi","responceMovie","setState","imgUrl","url","path","type","className","onClick","src","alt","slice","map","genre","name","to","pathname","fallback","component","Component"],"mappings":"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","file":"static/js/movie-details-page.925bd8cf.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = 'f4fc9e0b9d39be2e572ef6e62fdd383f';\r\n\r\nconst fetchTrending = () => {\r\n  return axios\r\n    .get(\r\n      `/trending/movie/day?api_key=${API_KEY}`,\r\n    )\r\n    .then(response => response.data.results);\r\n};\r\n\r\nconst fetchMovie = (query) => {\r\n  return axios\r\n    .get(\r\n      `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\r\n    )\r\n    .then(response => response.data);\r\n};\r\n\r\nconst fetchMovieById = (movieId) => {\r\n  return axios\r\n    .get(\r\n      `/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\r\n    )\r\n    .then(response => response.data);\r\n};\r\n\r\nconst fetchCast = (movieId) => {\r\n  return axios\r\n    .get(\r\n      `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\r\n    )\r\n    .then(response => response.data.cast);\r\n};\r\nconst fetchReview = (movieId) => {\r\n  return axios\r\n    .get(\r\n      `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\r\n    )\r\n    .then(response => response.data.results);\r\n};\r\n\r\nexport default { fetchTrending, fetchMovie, fetchMovieById, fetchCast, fetchReview };\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport '../styles/base.scss';\r\nimport movieApi from '../services/movieApi';\r\nimport routes from '../routes';\r\n\r\nconst Cast = lazy(() => import('./Cast' /* webpackChunkName: \"casts-page\" */));\r\nconst Reviews = lazy(() => import('./Reviews' /* webpackChunkName: \"reviews-page\" */));\r\n\r\nclass MovieDetailsPage extends Component {\r\n    state = {\r\n        title: null,\r\n        overview: null,\r\n        genres: null,\r\n        poster_path: null,\r\n        release_date: null,\r\n        vote_average: null,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const movieId = this.props.match.params.movieId;\r\n        const responceMovie = await movieApi.fetchMovieById(movieId);\r\n        const { title, overview, genres, poster_path, release_date, vote_average } = responceMovie;\r\n        this.setState({ title, overview, genres, poster_path, release_date, vote_average });\r\n    }\r\n\r\n    handleGoBack = () => {\r\n        const { location, history } = this.props;\r\n        if (location.state && location.state.from) {\r\n            return history.push(location.state.from);\r\n        } else (history.push(routes.moviesPage))\r\n    }\r\n\r\n    render() { \r\n        const { title, overview, genres, poster_path, release_date, vote_average } = this.state;\r\n        const imgUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\r\n        const url = this.props.match.url;\r\n        const path = this.props.match.path;\r\n        return (<>\r\n            <button type='button' className='button' onClick={this.handleGoBack}>Go Back</button>\r\n            <section>\r\n                <div>\r\n                    {poster_path && <img src={imgUrl} alt={title}/>}\r\n                </div>\r\n                <div className='description' >\r\n                    <h1>{title}({release_date && release_date.slice(0, 4)})</h1>\r\n                    <p>User Score: {vote_average}</p>\r\n                    <h3>Overview</h3>\r\n                    <p>{overview}</p>\r\n                    <h4>Genres</h4>\r\n                    {genres && <p>{genres.map(genre=>` ${genre.name}, `)}</p>}\r\n                </div>\r\n            </section>\r\n            <section className='add_section' >\r\n                <h5>Addicional information</h5>\r\n                <div>\r\n                    <Link to={{\r\n                        pathname: `${url}/cast`,\r\n                        state: {\r\n                            from: this.props.location,\r\n                        }\r\n                    }}>\r\n                        <button type='button' className='button'>Cast</button>\r\n                    </Link>\r\n                    <Link to={{\r\n                        pathname: `${url}/reviews`,\r\n                        state: {\r\n                            from: this.props.location,\r\n                        }\r\n                    }}>\r\n                        {<button type='button' className='button'>Reviews</button>}\r\n                    </Link>\r\n                </div>\r\n            </section>\r\n            <Suspense fallback={<h2>load</h2>}>\r\n                <Switch>\r\n                <Route path={`${path}/cast`} component={Cast} />\r\n                <Route path={`${path}/reviews`} component={Reviews} />\r\n                </Switch>\r\n            </Suspense>\r\n</>);\r\n    }\r\n}\r\n \r\nexport default MovieDetailsPage;"],"sourceRoot":""}