{"version":3,"sources":["views/Reviews.js"],"names":["Review","state","reviews","a","movieId","this","props","match","params","movieApi","fetchReview","responceReview","setState","length","map","review","key","id","author","content","Component"],"mappings":"qOAGMA,E,4MACFC,MAAQ,CACJC,QAAS,I,8FAGb,8BAAAC,EAAA,6DACUC,EAAUC,KAAKC,MAAMC,MAAMC,OAAOJ,QAD5C,SAEiCK,IAASC,YAAYN,GAFtD,OAEUO,EAFV,OAGIN,KAAKO,SAAS,CAAEV,QAASS,IAH7B,gD,0EAMA,WAAU,IACET,EAAYG,KAAKJ,MAAjBC,QACR,OAAQ,oCACHA,EAAQW,OACH,4BACGX,EAAQY,KAAI,SAAAC,GAAM,OACjB,wBAAIC,IAAKD,EAAOE,IACd,4BAAKF,EAAOG,QACZ,2BAAIH,EAAOI,cAGjB,4E,GAtBGC,aA2BNpB","file":"static/js/reviews-page.29b992eb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport movieApi from '../services/movieApi';\r\n\r\nclass Review extends Component {\r\n    state = {\r\n        reviews: []\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const movieId = this.props.match.params.movieId;\r\n        const responceReview = await movieApi.fetchReview(movieId);\r\n        this.setState({ reviews: responceReview });\r\n    }\r\n\r\n    render() { \r\n        const { reviews } = this.state;\r\n        return (<>\r\n            {reviews.length\r\n                ? <ul>\r\n                    {reviews.map(review =>\r\n                      <li key={review.id}>\r\n                        <h4>{review.author}</h4>\r\n                        <p>{review.content}</p>\r\n                      </li> )}\r\n                  </ul>\r\n                : <p>We don't have any reviews for this movie</p>}\r\n        </>);\r\n    }\r\n}\r\n \r\nexport default Review;"],"sourceRoot":""}